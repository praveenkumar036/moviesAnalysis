<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.demo.analysis</groupId>
        <artifactId>moviesAnalysis-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>movies-package</artifactId>
    <version>1.0-SNAPSHOT</version>


    <dependencies>
        <dependency>
            <groupId>com.demo.analysis</groupId>
            <artifactId>movies-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.demo.analysis</groupId>
            <artifactId>ratings-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.demo.analysis</groupId>
            <artifactId>users-api</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>


    <!-- Maven Shade plugin  is used to create fat jar -->

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


    <!--
             This allows Maven to run Ant tasks. To do so, there must be an existing project and
             maven-antrun-plugin must have its <target> tag configured
     -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <property name = "package.dir" value="target/package" />
                                <property name ="applications.dir" value="${package.dir}/app"/>
                                <property name="key.dir" value="${package.dir}/keys"/>
                                <delete dir="${package.dir}" />
                                <mkdir dir="${package.dir}" />
                                <mkdir dir ="${applications.dir}" />
                                <mkdir dir="${key.dir}" />
                                <!-- applications file output -->
                                <copy todir = "${applications.dir}" filtering = "true">
                                    <filterchain>
                                        <fixcrlf srcdir="${src}" includes="**/*.sh,**/*.properties"
                                                 eol="lf" eof="remove"/>
                                    <expandproperties/>
                                    </filterchain>
                                    <fileset dir="../movies-api/src/main/resources">
                                        <!-- File which need to be excluded-->
                                    </fileset>
                                </copy>
                                <copy tofile="${applications.dir}/movies-analytics.jar">
<!--                                  <fileset dir="target">-->
                                    <fileset dir="../movies-api/target">
                                    <include name="*-api*.jar"/>
                                 </fileset>
                                </copy>

                                <copy todir = "${applications.dir}" filtering = "true">
                                    <filterchain>
                                        <fixcrlf srcdir="${src}" includes="**/*.sh,**/*.properties"
                                                 eol="lf" eof="remove"/>
                                        <expandproperties/>
                                    </filterchain>
                                    <fileset dir="../ratings-api/src/main/resources">
                                        <!-- File which need to be excluded-->
                                    </fileset>
                                </copy>

                                <copy todir = "${applications.dir}" filtering = "true">
                                    <filterchain>
                                        <fixcrlf srcdir="${src}" includes="**/*.sh,**/*.properties"
                                                 eol="lf" eof="remove"/>
                                        <expandproperties/>
                                    </filterchain>
                                    <fileset dir="../users-api/src/main/resources">
                                        <!-- File which need to be excluded-->
                                    </fileset>
                                </copy>

                                <!-- setting permission of source code files -->
                                <chmod dir="${package.dir}" perm="777"/>
                                <!-- compressing source code -->
                                <zip file="target/app.zip" basedir="${package.dir}" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>